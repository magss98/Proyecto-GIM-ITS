#!/bin/bash

DB="socios.db"

# Funci√≥n para mostrar el men√∫
menu() {
    echo "===== GESTI√ìN DE SOCIOS ====="
    echo "1. Alta de socio"
    echo "2. Baja de socio"
    echo "3. Modificaci√≥n de socio"
    echo "4. Consulta de socio"
    echo "5. Listar todos"
    echo "6. Salir"
    echo "============================="
}

# Funci√≥n para dar de alta un socio
alta() {
    read -p "C√©dula: " cedula
    if grep -q "^$cedula|" "$DB"; then
        echo "‚ùå El socio con c√©dula $cedula ya existe."
        return
    fi

    read -p "Nombre: " nombre
    read -p "Direcci√≥n: " direccion
    read -p "Tel√©fonos: " telefonos
    read -p "E-mail: " email
    read -p "Tipo de socio (adulto/liceal/escolar/preescolar): " tipo
    read -p "Fecha de inicio de membres√≠a (AAAA-MM-DD): " fecha
    read -p "Contacto de emergencia (nombre - tel√©fono): " emergencia
    read -p "Informaci√≥n m√©dica (enfermedades, alergias, lesiones): " medica

    if [[ "$tipo" != "adulto" ]]; then
        echo "Socio menor de edad. Se requieren datos de referente adulto."
        read -p "Nombre del referente: " ref_nombre
        read -p "C√©dula del referente: " ref_cedula
        read -p "Tel√©fono del referente: " ref_tel
    else
        ref_nombre="N/A"
        ref_cedula="N/A"
        ref_tel="N/A"
    fi

    read -p "Carn√© de salud al d√≠a (si/no): " carne

    # Guardamos todo en el archivo
    echo "$cedula|$nombre|$direccion|$telefonos|$email|$tipo|$fecha|$emergencia|$medica|$ref_nombre|$ref_cedula|$ref_tel|$carne" >> "$DB"
    echo "‚úÖ Socio agregado con √©xito."
}

# Funci√≥n para baja de socio
baja() {
    read -p "C√©dula a eliminar: " cedula
    if grep -q "^$cedula|" "$DB"; then
        grep -v "^$cedula|" "$DB" > tmp.db && mv tmp.db "$DB"
        echo "üóëÔ∏è Socio eliminado."
    else
        echo "‚ùå No existe socio con esa c√©dula."
    fi
}

# Funci√≥n para modificaci√≥n de socio
modificacion() {
    read -p "C√©dula del socio a modificar: " cedula
    if ! grep -q "^$cedula|" "$DB"; then
        echo "‚ùå No existe socio con esa c√©dula."
        return
    fi

    # Eliminamos el registro anterior
    grep -v "^$cedula|" "$DB" > tmp.db && mv tmp.db "$DB"
    echo "‚ö†Ô∏è Ingrese los nuevos datos:"
    alta
}

# Funci√≥n para consulta
consulta() {
    read -p "C√©dula a consultar: " cedula
    if grep -q "^$cedula|" "$DB"; then
        grep "^$cedula|" "$DB" | awk -F"|" '{
            print "C√©dula: " $1
            print "Nombre: " $2
            print "Direcci√≥n: " $3
            print "Tel√©fonos: " $4
            print "E-mail: " $5
            print "Tipo de socio: " $6
            print "Fecha inicio: " $7
            print "Emergencia: " $8
            print "Informaci√≥n m√©dica: " $9
            print "Referente adulto: " $10 " (C√©dula: " $11 ", Tel: " $12 ")"
            print "Carn√© de salud: " $13
        }'
    else
        echo "‚ùå No existe socio con esa c√©dula."
    fi
}

# Funci√≥n para listar todos
listar() {
    echo "üìã Listado de socios:"
    awk -F"|" '{print $1 " - " $2 " (" $6 ")"}' "$DB"
}

# Loop principal
while true; do
    menu
    read -p "Seleccione una opci√≥n: " opcion
    case $opcion in
        1) alta ;;
        2) baja ;;
        3) modificacion ;;
        4) consulta ;;
        5) listar ;;
        6) echo "üëã Saliendo..."; break ;;
        *) echo "‚ùå Opci√≥n inv√°lida." ;;
    esac
done

